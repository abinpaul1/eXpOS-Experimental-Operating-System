alias functionNum R1;
alias currentPID R2;

if (functionNum==8) then
  while ([TERMINAL_STATUS_TABLE]==1) do
    [PROCESS_TABLE + currentPID*16 + 4]=WAIT_TERMINAL;
    multipush(R1, R2);
    call MOD_5;
    multipop(R1, R2);
  endwhile;
  [TERMINAL_STATUS_TABLE]=1;
  [TERMINAL_STATUS_TABLE + 1]=currentPID;
endif;

if(functionNum==9) then
  //If pid of process using terminal and to be scheduled dont match
  if (currentPID != [TERMINAL_STATUS_TABLE+1]) then
    //Set return value as -1
    R0 = -1;
    return;
  endif;
  [TERMINAL_STATUS_TABLE]=0;

  //Set all process with status wait_terminal as ready
  alias iter R4;
  iter = 1;
  while (iter<=15) do
    if ([PROCESS_TABLE + iter*16 + 1] != -1) then
      if ([PROCESS_TABLE + iter*16 + 4]==WAIT_TERMINAL) then
        [PROCESS_TABLE +iter*16 + 4] = READY;
      endif;
    endif;
    iter = iter + 1;
  endwhile;

  //Set return value as 0
  R0 = 0;
endif;


return;
